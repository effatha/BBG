--CREATE TABLE [L0].[L0_MI_PLAN_PRICE_EV_TARGETS]
--(
--    ITEMNO VARCHAR(15)
--    ,ITEMTYPE  VARCHAR(5)
--    ,FULFILLMENT VARCHAR(5)
--    ,STORAGELOCATIONCODE INT
--    ,MIN_EV_RATE DECIMAL(18,2)
--    ,STD_EV_RATE DECIMAL(18,2)
--    ,MAX_EV_RATE DECIMAL(18,2)
--    ,LOAD_TIMESTAMP DATETIME2
--)
--WITH
--(
--      DISTRIBUTION = REPLICATE,
--      CLUSTERED COLUMNSTORE INDEX
--)
--GO

--CREATE TABLE [L0].[L0_MI_PLAN_PRICE_COUNTRY_MARKETING_COMMISSIONS]
--(
--	[CHANNELCOUNTRY] [varchar](5) NULL,
--	[MARKETING_COMMISSIONS_PLAN_RATE] [decimal](18, 2) NULL,
--	[COUNTRY] [varchar](5) NULL,
--	[LOAD_TIMESTAMP] [datetime2](7) NULL
--)
--WITH
--(
--	DISTRIBUTION = REPLICATE,
--	CLUSTERED COLUMNSTORE INDEX
--)
--GO




--select * from[L0].[L0_MI_PLAN_PRICE_EV_TARGETS] 
--INSERT INTO  [L0].[L0_MI_PLAN_PRICE_EV_TARGETS] (ITEMNO,ITEMTYPE,FULFILLMENT,STORAGELOCATIONCODE,MIN_EV_RATE,STD_EV_RATE,MAX_EV_RATE,LOAD_TIMESTAMP)
--SELECT '10030535','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10039858','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046110','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046109','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046111','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10033462','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10041291','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045848','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046120','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045949','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046130','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045952','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046121','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045849','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045846','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046128','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046129','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046125','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046119','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046101','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045754','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045850','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10029778','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045847','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046100','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045948','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10033574','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046112','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045950','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10035870','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045488','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046115','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045756','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045753','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10040292','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10040111','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046116','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046113','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045755','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045945','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10046114','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045759','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045845','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045489','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10045757','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10036115','A','FBM','1000',0,0.1,0.3,getdate()
--UNION SELECT '10038984','A','FBM','1000',0,0.1,0.3,getdate()


--select count(*) from [L0].[L0_MI_PLAN_PRICE_EV_TARGETS] where itemno = '10045812'

--truncate table [L0].[L0_MI_PLAN_PRICE_EV_TARGETS]
--000000000010030535
--insert into [L0].[L0_MI_PLAN_PRICE_COUNTRY_MARKETING_COMMISSIONS] (CHANNELCOUNTRY,MARKETING_COMMISSIONS_PLAN_RATE,LOAD_TIMESTAMP)
--SELECT 'AT',0.21,getdate()
--UNION SELECT 'BE',0.21,getdate()
--UNION SELECT 'CH',0.21,getdate()
--UNION SELECT 'DE',0.28,getdate()
--UNION SELECT 'ES',0.28,getdate()
--UNION SELECT 'FI',0.21,getdate()
--UNION SELECT 'FR',0.28,getdate()
--UNION SELECT 'IT',0.28,getdate()
--UNION SELECT 'IE',0.21,getdate()
--UNION SELECT 'NL',0.28,getdate()
--UNION SELECT 'PT',0.21,getdate()
--UNION SELECT 'GB',0.28,getdate()

--TRUNCATE TABLE [L0].[L0_MI_PLAN_PRICE_COUNTRY_MARKETING_COMMISSIONS]

DECLARE @PRICE_DATE as DATE
SET @PRICE_DATE = '2023-11-01'

DELETE FROM [L1].[L1_FACT_F_PLAN_PRICE] 
WHERE [D_EFFECTIVE] = @PRICE_DATE

;WITH CTE_MEK as (

	SELECT 
		 MATNR
		,VERPR
		,BWKEY
		,BWTAR
		,LOAD_TIMESTAMP 
		,rank() over (partition by CAST(MATNR as int),BWKEY,BWTAR ORDER BY LOAD_TIMESTAMP DESC ) AS LastVersion
	FROM [L0].[L0_S4HANA_MBEW] 
	WHERE cast(MATNR as int) in (SELECT ItemNO from [L0].[L0_MI_PLAN_PRICE_EV_TARGETS])
	
	--BWKEY = 1000
 --   AND BWTAR = '100'
		
),
CTE_SHIPP_COSTS as
(SELECT 
	    cost.item_code,
	    CASE WHEN cost.warehouse=1 THEN 'Kamp-Lintfort'
	         WHEN cost.warehouse=2 THEN 'Hoppegarten'
	         WHEN cost.warehouse=3 THEN 'Bratislava'
	         WHEN cost.warehouse=4 THEN 'Werne'
	    END warehouse,
        warehouse as warehouse_id,
	    cost.country,
		ctypes.cost_type_name as Fulfillment,
	    SUM(cost.parcel_total_cost) as main_shipping_cost
	FROM [L0].[L0_MERCURY_LOGISTIC_BUDGET_CAPO_COST] cost 
	LEFT JOIN [L0].[L0_MERCURY_LOGISTIC_BUDGET_COST_TYPES] ctypes
	ON cost.cost_type_id = ctypes.id
	WHERE 0=0
	    --AND cost.warehouse IN (1, 3, 4)
		
	GROUP BY 
	    cost.item_code,
	    cost.warehouse,
	    cost.country,
		ctypes.cost_type_name
)

, cte_main AS (

	SELECT 
	    [CD_PLAN_PRICE]                           = Concat(ev.ItemNo,'#',ITEMTYPE,'#',ev.FULFILLMENT,'#',ev.STORAGELOCATIONCODE)
        ,[ID_ITEM]                                = item.ID_ITEM 
        ,[NUM_ITEM]                               = ev.ItemNo
        ,[CD_ITEM_TYPE]                           = ev.ITEMTYPE 
        ,[CD_FULFILLMENT]                         = ev.FULFILLMENT 
        ,[CD_STORAGE_LOCATION]                    = ev.STORAGELOCATIONCODE 
        ,[CD_CHANNEL_COUNTRY]                     = country.CHANNELCOUNTRY
        ,[VL_MIN_EV_RATE]                         = ev.MIN_EV_RATE 
        ,[VL_STD_EV_RATE]                         = ev.STD_EV_RATE 
        ,[VL_MAX_EV_RATE]                         = ev.MAX_EV_RATE
        ,[VL_COUNTRY_MARKETING_COMMISSION_RATE]   = country.MARKETING_COMMISSIONS_PLAN_RATE
        ,[VL_RETURN_RATE]                         = ISNULL(ret.VL_RATE,0) 
        ,[VL_REFUND_RATE]                         = ISNULL(ref.VL_RATE,0) 
        ,[VL_REPLACEMENT_RATE]                    = ISNULL(replacement.VL_RATE,0)	
        ,[VL_DEPRECIATION_RATE]                   = ISNULL(depreciation.VL_RATE,0)
        ,[AMT_MEK_HEDGING_EUR]                    = ISNULL(mek.VERPR,mek_last.VERPR)
		,[D_MEK_DATE]							  = ISNULL(mek.LOAD_TIMESTAMP,mek_last.LOAD_TIMESTAMP)
        ,[AMT_GTS_MARKUP]                         = ISNULL(mek.VERPR,mek_last.VERPR)/ (1+ ISNULL(L0_MI_OTHER_DELIVERY_COSTSRATES.OTHERDELIVERYRELATEDCOSTSRATES,0)) /(1+ CASE WHEN GTS.GTSMARKUPRATES < 0 THEN 0 ELSE ISNULL(GTS.GTSMARKUPRATES,0) END) * CASE WHEN GTS.GTSMARKUPRATES < 0 THEN 0 ELSE ISNULL(GTS.GTSMARKUPRATES,0) END
        ,[AMT_SHIPPING_COST_EST_EUR]              = ship_cost_fbm.main_shipping_cost 
        ,[D_EFFECTIVE]                            = @PRICE_DATE
	FROM L0.[L0_MI_PLAN_PRICE_EV_TARGETS] ev
	INNER JOIN L1.L1_DIM_A_ITEM item
		ON cast(ev.ItemNo as int) = cast(item.CD_ITEM as int)	
	CROSS JOIN L0.[L0_MI_PLAN_PRICE_COUNTRY_MARKETING_COMMISSIONS] country
	LEFT JOIN CTE_MEK mek
		on cast(mek.MATNR as int)  =  cast(ev.ItemNo as int)	
		AND CASE WHEN ev.ITEMTYPE = 'A' THEN '100' ELSE ev.ITEMTYPE END = mek.BWTAR
		AND ev.STORAGELOCATIONCODE = mek.BWKEY
		and mek.LOAD_TIMESTAMP = @PRICE_DATE
	LEFT JOIN CTE_MEK mek_last
		on cast(mek_last.MATNR as int)  =  cast(ev.ItemNo as int)	
		AND CASE WHEN ev.ITEMTYPE = 'A' THEN '100' ELSE ev.ITEMTYPE END = mek_last.BWTAR
		AND ev.STORAGELOCATIONCODE = mek_last.BWKEY
		AND mek_last.LastVersion = 1
	LEFT JOIN  [L0].[L0_MI_OTHER_DELIVERY_COSTSRATES] L0_MI_OTHER_DELIVERY_COSTSRATES
        ON @PRICE_DATE between L0_MI_OTHER_DELIVERY_COSTSRATES.VALID_FROM and L0_MI_OTHER_DELIVERY_COSTSRATES.VALID_TO
	LEFT JOIN [L0].[L0_MI_GTS_MARKUP_RATES] GTS
		ON ev.ItemNo = GTS.ITEMNO
			AND @PRICE_DATE between GTS.VALID_FROM and GTS.VALID_TO
	LEFT JOIN [L0].[L0_MI_STORAGE_LOCATION] stor1 
            ON stor1.STORAGELOCATIONCODE=ev.STORAGELOCATIONCODE
             AND stor1.COMPANYCODE='1000'
             AND stor1.Source = 'SAP' 
	LEFT JOIN CTE_SHIPP_COSTS ship_cost_fbm
		ON ev.ItemNo = ship_cost_fbm.Item_code
			AND country.CHANNELCOUNTRY=ship_cost_fbm.country
			AND stor1.STORAGELOCATION=ship_cost_fbm.warehouse
			AND ship_cost_fbm.Fulfillment = 'FBM'
	LEFT JOIN [L0].[L0_MI_COUNTRY_MAPPING] cmi
			ON country.CHANNELCOUNTRY = cmi.COUNTRY
	LEFT JOIN [L1].[L1_DIM_A_SALES_REPLACEMENT_VALUES] replacement
			ON item.T_PRODUCT_HIERARCHY_2 = replacement.T_PRODUCT_HIERARCHY_2
			AND cmi.INVOICECOUNTRYGROUP = replacement.[CD_COUNTRY_INVOICE_GROUP]
			AND @PRICE_DATE BETWEEN replacement.D_VALID_FROM AND replacement.D_VALID_TO
	LEFT JOIN L1.L1_DIM_A_SALES_REFUND_VALUES ref  
			on @PRICE_DATE BETWEEN ref.D_VALID_FROM AND ref.D_VALID_TO
			and cmi.INVOICECOUNTRYGROUP=ref.CD_COUNTRY_INVOICE_GROUP
			and item.T_PRODUCT_HIERARCHY_2 =ref.[T_PRODUCT_HIERARCHY_2]
	LEFT JOIN L1.L1_DIM_A_SALES_RETURN_VALUES ret  
			on @PRICE_DATE BETWEEN ret.D_VALID_FROM AND ret.D_VALID_TO
			and cmi.INVOICECOUNTRYGROUP=ret.CD_COUNTRY_INVOICE_GROUP
			and item.T_PRODUCT_HIERARCHY_2 =ret.T_PRODUCT_HIERARCHY_2
		--join Depreciation values
	LEFT JOIN [L1].[L1_DIM_A_DEPRECIATION_VALUES] depreciation
		ON @PRICE_DATE BETWEEN depreciation.D_VALID_FROM AND depreciation.D_VALID_TO
			AND stor1.STORAGELOCATION=depreciation.[T_STORAGE_LOCATION]
			AND item.T_PRODUCT_HIERARCHY_2 =depreciation.[T_PRODUCT_HIERARCHY_2]	
), cte_l1 as(
SELECT 
	*
	    --,[AMT_VARIABLE_COST_EUR]                  =  --- MEK
					--								(ISNULL([AMT_MEK_HEDGING_EUR],0) - ISNULL([AMT_GTS_MARKUP],0)  + (([VL_RETURN_RATE]*ISNULL([AMT_MEK_HEDGING_EUR],0))*[VL_DEPRECIATION_RATE]))
					--								+
					--								--- Shipping estimates c4po	
					--								([AMT_SHIPPING_COST_EST_EUR] ) * (1+[VL_RETURN_RATE]+[VL_REPLACEMENT_RATE])
					--								+
					--								--- Refund Value (this rate shoudl be used with the NOv/ for this purpose we use MEK w/o gts
					--								([VL_REFUND_RATE])* ((ISNULL([AMT_MEK_HEDGING_EUR],0)  - ISNULL([AMT_GTS_MARKUP],0))/0.6)
					--								+ -- marketingCosts + commissions
					--								[VL_COUNTRY_MARKETING_COMMISSION_RATE] * ((ISNULL([AMT_MEK_HEDGING_EUR],0)  - ISNULL([AMT_GTS_MARKUP],0))/0.6)

		,AMT_FIXED_COSTS_EUR					 =	(ISNULL([AMT_MEK_HEDGING_EUR],0) - ISNULL([AMT_GTS_MARKUP],0)  + (([VL_RETURN_RATE]*ISNULL([AMT_MEK_HEDGING_EUR],0))*[VL_DEPRECIATION_RATE]))												+
													--- Shipping estimates c4po
													+
													([AMT_SHIPPING_COST_EST_EUR] ) * (1+[VL_RETURN_RATE]+[VL_REPLACEMENT_RATE])


FROM cte_main
),
cte_marketing as
(
	select *,
			AMT_MARKETING_COSTS_EUR = AMT_FIXED_COSTS_EUR * [VL_COUNTRY_MARKETING_COMMISSION_RATE]
	FROM cte_l1

),
cte_l2 AS 
(
SELECT *
        ,[AMT_PLAN_PRICE_MIN_BASE_EUR]                 = ROUND((AMT_FIXED_COSTS_EUR+AMT_MARKETING_COSTS_EUR) * (1+[VL_MIN_EV_RATE]),2)
        ,[AMT_PLAN_PRICE_STD_BASE_EUR]                 = ROUND((AMT_FIXED_COSTS_EUR+AMT_MARKETING_COSTS_EUR) * (1+[VL_STD_EV_RATE]),2) 
        ,[AMT_PLAN_PRICE_MAX_BASE_EUR]                 = ROUND((AMT_FIXED_COSTS_EUR+AMT_MARKETING_COSTS_EUR) * (1+[VL_MAX_EV_RATE]),2)
FROM cte_marketing
)
,cte_l3 AS 
(

SELECT *
        ,[AMT_PLAN_PRICE_MIN_MKT_EUR]                 = ROUND(([AMT_PLAN_PRICE_MIN_BASE_EUR]) + (([VL_MIN_EV_RATE]) * (([AMT_PLAN_PRICE_MIN_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR)) + (([AMT_PLAN_PRICE_MIN_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR),2)
        ,[AMT_PLAN_PRICE_STD_MKT_EUR]                 = ROUND(([AMT_PLAN_PRICE_STD_BASE_EUR]) + (([VL_STD_EV_RATE]) * (([AMT_PLAN_PRICE_STD_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR)) + (([AMT_PLAN_PRICE_STD_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR),2)
        ,[AMT_PLAN_PRICE_MAX_MKT_EUR]                 = ROUND(([AMT_PLAN_PRICE_MAX_BASE_EUR]) + (([VL_MAX_EV_RATE]) * (([AMT_PLAN_PRICE_MAX_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR)) + (([AMT_PLAN_PRICE_MAX_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR),2)

		,AMT_MARKETING_COSTS_MIN_EUR = AMT_MARKETING_COSTS_EUR + (([AMT_PLAN_PRICE_MIN_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR)
		,AMT_MARKETING_COSTS_STD_EUR = AMT_MARKETING_COSTS_EUR + (([AMT_PLAN_PRICE_STD_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR)
		,AMT_MARKETING_COSTS_MAX_EUR = AMT_MARKETING_COSTS_EUR + (([AMT_PLAN_PRICE_MAX_BASE_EUR]*[VL_COUNTRY_MARKETING_COMMISSION_RATE])-AMT_MARKETING_COSTS_EUR)

FROM cte_l2


)
,cte_l4 AS 
(

SELECT *
        ,[AMT_PLAN_PRICE_REFUND_MIN_EUR]                 = ROUND([AMT_PLAN_PRICE_MIN_MKT_EUR] + ([VL_REFUND_RATE]*[AMT_PLAN_PRICE_MIN_MKT_EUR]),2)
        ,[AMT_PLAN_PRICE_REFUND_STD_EUR]                 = ROUND([AMT_PLAN_PRICE_STD_MKT_EUR] + ([VL_REFUND_RATE]*[AMT_PLAN_PRICE_STD_MKT_EUR]),2)
        ,[AMT_PLAN_PRICE_REFUND_MAX_EUR]                 = ROUND([AMT_PLAN_PRICE_MAX_MKT_EUR] + ([VL_REFUND_RATE]*[AMT_PLAN_PRICE_MAX_MKT_EUR]),2)

		,AMT_REFUND_VALUE_MIN_L1_EUR					  = ROUND([VL_REFUND_RATE]*[AMT_PLAN_PRICE_MIN_MKT_EUR],2) 
		,AMT_REFUND_VALUE_STD_L1_EUR					  = ROUND([VL_REFUND_RATE]*[AMT_PLAN_PRICE_STD_MKT_EUR],2) 
		,AMT_REFUND_VALUE_MAX_L1_EUR					  = ROUND([VL_REFUND_RATE]*[AMT_PLAN_PRICE_MAX_MKT_EUR],2) 


FROM cte_l3


),
cte_l5 as 
(
	SELECT
	*
		,[AMT_PLAN_PRICE_MIN_EUR]                 = ROUND(([AMT_PLAN_PRICE_REFUND_MIN_EUR]) + (([VL_MIN_EV_RATE]) * (([AMT_PLAN_PRICE_REFUND_MIN_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_MIN_L1_EUR)) + ((([AMT_PLAN_PRICE_REFUND_MIN_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_MIN_L1_EUR)),2)
		,[AMT_PLAN_PRICE_STD_EUR]                 = ROUND(([AMT_PLAN_PRICE_REFUND_STD_EUR]) + (([VL_STD_EV_RATE]) * (([AMT_PLAN_PRICE_REFUND_STD_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_STD_L1_EUR)) + ((([AMT_PLAN_PRICE_REFUND_STD_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_STD_L1_EUR)),2)
		,[AMT_PLAN_PRICE_MAX_EUR]                 = ROUND(([AMT_PLAN_PRICE_REFUND_MAX_EUR]) + (([VL_MAX_EV_RATE]) * (([AMT_PLAN_PRICE_REFUND_MAX_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_MAX_L1_EUR)) + ((([AMT_PLAN_PRICE_REFUND_MAX_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_MAX_L1_EUR)),2)

		,AMT_REFUND_VALUE_MIN_EUR				  = AMT_REFUND_VALUE_MIN_L1_EUR + (([AMT_PLAN_PRICE_REFUND_MIN_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_MIN_L1_EUR)
		,AMT_REFUND_VALUE_STD_EUR				  = AMT_REFUND_VALUE_STD_L1_EUR + (([AMT_PLAN_PRICE_REFUND_STD_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_STD_L1_EUR)
		,AMT_REFUND_VALUE_MAX_EUR				  = AMT_REFUND_VALUE_MAX_L1_EUR + (([AMT_PLAN_PRICE_REFUND_MAX_EUR]*[VL_REFUND_RATE])-AMT_REFUND_VALUE_MAX_L1_EUR)


	FROM cte_l4


)


INSERT INTO [L1].[L1_FACT_F_PLAN_PRICE]
           ([D_EFFECTIVE]
           ,[ID_ITEM]
           ,[NUM_ITEM]
           ,[CD_ITEM_TYPE]
           ,[CD_FULFILLMENT]
           ,[CD_STORAGE_LOCATION]
           ,[CD_CHANNEL_COUNTRY]
           ,[VL_MIN_EV_RATE]
           ,[VL_STD_EV_RATE]
           ,[VL_MAX_EV_RATE]
           ,[VL_COUNTRY_MARKETING_COMMISSION_RATE]
           ,[VL_RETURN_RATE]
           ,[VL_REFUND_RATE]
           ,[VL_REPLACEMENT_RATE]
           ,[VL_DEPRECIATION_RATE]
           ,[AMT_MEK_HEDGING_EUR]
           ,[AMT_GTS_MARKUP]
           ,[D_MEK_DATE]
           ,[AMT_SHIPPING_COST_EST_EUR]
           ,[AMT_MARKETING_COSTS_MIN_EUR]
           ,[AMT_REFUND_VALUE_MIN_EUR]
           ,[AMT_TOTAL_COSTS_MIN_EUR]
           ,[AMT_PLAN_PRICE_MIN_EUR]
           ,[AMT_MARKETING_COSTS_STD_EUR]
           ,[AMT_REFUND_VALUE_STD_EUR]
           ,[AMT_TOTAL_COSTS_STD_EUR]
           ,[AMT_PLAN_PRICE_STD_EUR]
           ,[AMT_MARKETING_COSTS_MAX_EUR]
           ,[AMT_REFUND_VALUE_MAX_EUR]
           ,[AMT_TOTAL_COSTS_MAX_EUR]
           ,[AMT_PLAN_PRICE_MAX_EUR]
           ,[DT_DWH_CREATED]
           ,[DT_DWH_UPDATED])

SELECT
			[D_EFFECTIVE]								= @PRICE_DATE
           ,[ID_ITEM]									= [ID_ITEM]
           ,[NUM_ITEM]									= [NUM_ITEM]
           ,[CD_ITEM_TYPE]								= [CD_ITEM_TYPE]
           ,[CD_FULFILLMENT]							= [CD_FULFILLMENT]
           ,[CD_STORAGE_LOCATION]						= [CD_STORAGE_LOCATION]
           ,[CD_CHANNEL_COUNTRY]						= [CD_CHANNEL_COUNTRY]
           ,[VL_MIN_EV_RATE]							= [VL_MIN_EV_RATE]
           ,[VL_STD_EV_RATE]							= [VL_STD_EV_RATE]
           ,[VL_MAX_EV_RATE]							= [VL_MAX_EV_RATE]
           ,[VL_COUNTRY_MARKETING_COMMISSION_RATE]		= [VL_COUNTRY_MARKETING_COMMISSION_RATE]
           ,[VL_RETURN_RATE]							= [VL_RETURN_RATE]
           ,[VL_REFUND_RATE]							= [VL_REFUND_RATE]
           ,[VL_REPLACEMENT_RATE]						= [VL_REPLACEMENT_RATE]
           ,[VL_DEPRECIATION_RATE]						= [VL_DEPRECIATION_RATE]
           ,[AMT_MEK_HEDGING_EUR]						= [AMT_MEK_HEDGING_EUR]
           ,[AMT_GTS_MARKUP]							= [AMT_GTS_MARKUP]
           ,[D_MEK_DATE]								= [D_MEK_DATE]
           ,[AMT_SHIPPING_COST_EST_EUR]					= [AMT_SHIPPING_COST_EST_EUR]
           ,[AMT_MARKETING_COSTS_MIN_EUR]				= [AMT_MARKETING_COSTS_MIN_EUR]
           ,[AMT_REFUND_VALUE_MIN_EUR]					= [AMT_REFUND_VALUE_MIN_EUR]
           ,[AMT_TOTAL_COSTS_MIN_EUR]					= [AMT_FIXED_COSTS_EUR] + [AMT_MARKETING_COSTS_MIN_EUR] + [AMT_REFUND_VALUE_MIN_EUR]
           ,[AMT_PLAN_PRICE_MIN_EUR]					= [AMT_PLAN_PRICE_MIN_EUR]
           ,[AMT_MARKETING_COSTS_STD_EUR]				= [AMT_MARKETING_COSTS_STD_EUR]
           ,[AMT_REFUND_VALUE_STD_EUR]					= [AMT_REFUND_VALUE_STD_EUR]
           ,[AMT_TOTAL_COSTS_STD_EUR]					= [AMT_FIXED_COSTS_EUR] + [AMT_MARKETING_COSTS_STD_EUR] + [AMT_REFUND_VALUE_STD_EUR]
           ,[AMT_PLAN_PRICE_STD_EUR]					= [AMT_PLAN_PRICE_STD_EUR]
           ,[AMT_MARKETING_COSTS_MAX_EUR]				= [AMT_MARKETING_COSTS_MAX_EUR]
           ,[AMT_REFUND_VALUE_MAX_EUR]					= [AMT_REFUND_VALUE_MAX_EUR]
           ,[AMT_TOTAL_COSTS_MAX_EUR]					= [AMT_FIXED_COSTS_EUR] + [AMT_MARKETING_COSTS_MAX_EUR] + [AMT_REFUND_VALUE_MAX_EUR] 
           ,[AMT_PLAN_PRICE_MAX_EUR]					= [AMT_PLAN_PRICE_MAX_EUR]
           ,[DT_DWH_CREATED]							= sysdatetime() 
           ,[DT_DWH_UPDATED]							= sysdatetime() 
FROM cte_l5



SELECT top 10 * FROM  PL.PL_V_PLAN_PRICE where Mek > 10




CREATE TABLE [L1].[L1_FACT_F_PLAN_PRICE]
(
	D_EFFECTIVE DATE
	,ID_ITEM INT
	,NUM_ITEM INT
	,CD_ITEM_TYPE VARCHAR(5)
	,CD_FULFILLMENT VARCHAR(100)
	,CD_STORAGE_LOCATION VARCHAR(10)
	,CD_CHANNEL_COUNTRY VARCHAR(5)
	,VL_MIN_EV_RATE DECIMAL(19,2)
	,VL_STD_EV_RATE DECIMAL(19,2)
	,VL_MAX_EV_RATE DECIMAL(19,2)
	,VL_COUNTRY_MARKETING_COMMISSION_RATE  DECIMAL(19,2)
	,[VL_RETURN_RATE]         DECIMAL(19,6)        
    ,[VL_REFUND_RATE]         DECIMAL(19,6)        
    ,[VL_REPLACEMENT_RATE]    DECIMAL(19,6)        
    ,[VL_DEPRECIATION_RATE]   DECIMAL(19,6)
	,[AMT_MEK_HEDGING_EUR]	  DECIMAL(19,6)
	,[AMT_GTS_MARKUP]		  DECIMAL(19,6)
	,[D_MEK_DATE]			  DATE
	,[AMT_SHIPPING_COST_EST_EUR] DECIMAL(19,6)
	,[AMT_MARKETING_COSTS_MIN_EUR] DECIMAL(19,2)
	,[AMT_REFUND_VALUE_MIN_EUR]	   DECIMAL(19,2)
	,[AMT_TOTAL_COSTS_MIN_EUR]	   DECIMAL(19,2)
	,[AMT_PLAN_PRICE_MIN_EUR]	   DECIMAL(19,2)

	,[AMT_MARKETING_COSTS_STD_EUR] DECIMAL(19,2)
	,[AMT_REFUND_VALUE_STD_EUR]	   DECIMAL(19,2)
	,[AMT_TOTAL_COSTS_STD_EUR]	   DECIMAL(19,2)
	,[AMT_PLAN_PRICE_STD_EUR]	   DECIMAL(19,2)

	,[AMT_MARKETING_COSTS_MAX_EUR] DECIMAL(19,2)
	,[AMT_REFUND_VALUE_MAX_EUR]	   DECIMAL(19,2)
	,[AMT_TOTAL_COSTS_MAX_EUR]	   DECIMAL(19,2)
	,[AMT_PLAN_PRICE_MAX_EUR]	   DECIMAL(19,2)

	,[DT_DWH_CREATED] SMALLDATETIME NOT NULL
	,[DT_DWH_UPDATED] SMALLDATETIME NOT NULL

)
WITH
(
      DISTRIBUTION = REPLICATE,
      CLUSTERED COLUMNSTORE INDEX
)
GO



--CREATE VIEW PL.PL_V_PLAN_PRICE

--AS

--SELECT
--		PriceDate = D_EFFECTIVE
--        , ItemId = [ID_ITEM]                                
--        ,ItemNo = [NUM_ITEM]                               
--        ,ItemType = [CD_ITEM_TYPE]                           
--        ,FulFillment = [CD_FULFILLMENT]                         
--        ,StorageLocation = [CD_STORAGE_LOCATION]                    
--        ,ChannelCountry = [CD_CHANNEL_COUNTRY]                     
--        ,MinEVRate = [VL_MIN_EV_RATE]                         
--        ,StdEVRate = [VL_STD_EV_RATE]                         
--		,MaxEvRate = [VL_MAX_EV_RATE]                         
--        ,MarketingCommissionsRate= [VL_COUNTRY_MARKETING_COMMISSION_RATE]   
--        ,ReturnRate= [VL_RETURN_RATE]                         
--        ,RefundRate= [VL_REFUND_RATE]                         
--        ,ReplacementRate= [VL_REPLACEMENT_RATE]                    
--        ,DepreciationRate= [VL_DEPRECIATION_RATE]                   
--        ,MEK= [AMT_MEK_HEDGING_EUR]                    
--		,LastMekDate= [D_MEK_DATE]							  
--        ,GTSMarkup= [AMT_GTS_MARKUP]                         
--        ,ShippingCostEst= [AMT_SHIPPING_COST_EST_EUR]    
--		----MIN
--		,MarketingCostsMin = AMT_MARKETING_COSTS_MIN_EUR
--		,RefundValueMin = AMT_REFUND_VALUE_MIN_EUR
--		,TotalCostsMin = [AMT_TOTAL_COSTS_MIN_EUR] 
--		,PriceMin = [AMT_PLAN_PRICE_MIN_EUR]
--		---STD
--		,MarketingCostsStd = AMT_MARKETING_COSTS_STD_EUR
--		,RefundValueStd = AMT_REFUND_VALUE_STD_EUR
--		,TotalCostsStd = [AMT_TOTAL_COSTS_MIN_EUR]
--		,PriceStd = [AMT_PLAN_PRICE_STD_EUR]
--		---MAX
--		,MarketingCostsMax = AMT_MARKETING_COSTS_MAX_EUR
--		,RefundValueMax = AMT_REFUND_VALUE_MAX_EUR
--		,TotalCostsMax = [AMT_TOTAL_COSTS_MIN_EUR]
--		,PriceMax = [AMT_PLAN_PRICE_MAX_EUR]
--FROM [L1].[L1_FACT_F_PLAN_PRICE]              


--SELECT PriceDate, count(*)
--FROM  PL.PL_V_PLAN_PRICE
--group by  PriceDate