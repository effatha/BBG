--select top 10 * from [L1].[L1_DIM_A_FINANCE_TRAN_KPI_MATRIX] where [FL_HAS_TCODE] IS NOT NULL [VL_NET_PRODUCT_COST_PARAM] is not null and CD_ACCOUNT_NUMBER = '0051600000' and CD_DOCUMENT_TYPE_FI = 'WL'
--select top 10 * from  [L1].[L1_DIM_A_SALES_TRANSACTION_TYPE] 



SELECT	
	
	MONTH(D_FI_CREATED)
	--,fact.CD_ACCOUNT_NUMBER
	--,isnull(stock.CD_STOCK_MOVEMENT_TYPE,'')
	--,matrix.ID_FINANCE_TRAN_KPI_MATRIX
	--,CONCAT(matrix.CD_TRANSACTION_TYPE_FI ,'#FKART') MatrixFI
	,fkart.[CD_SALES_TRANSACTION_TYPE]
	,sales.CD_TYPE
	--,AMT_AMOUNT_COMPANY *isnull(matrix.[VL_NET_PRODUCT_COST_PARAM],0)
	--,matrix.CD_STOCK_MOVEMENT_TYPE
	--,stock.CD_STOCK_MOVEMENT_TYPE
	--,stock.ID_STOCK_MOVEMENT
	--,fact.CD_DOCUMENT_TYPE_FI
	--,matrix.CD_DOCUMENT_TYPE_FI
	,[AMT_INVOICED_ORDER_VALUE_FULL_PRICE]											= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_INVOICED_ORDER_VALUE_FULL_PRICE_PARAM],0)) 
	,[VL_INVOICED_DISCOUNTS_VOUCHERS_PARAM]											= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_INVOICED_DISCOUNTS_VOUCHERS_PARAM],0))
	,[VL_INVOICED_ORDER_VALUE_PARAM]												= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_INVOICED_ORDER_VALUE_PARAM],0))
	,[VL_REFUNDS_PARAM]																= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_REFUNDS_PARAM],0))
	,[VL_REFUNDS_THEREOF_RETURN_AVOIDANCE_CREDITS_PARAM]							= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_REFUNDS_THEREOF_RETURN_AVOIDANCE_CREDITS_PARAM],0))
	,[VL_REFUNDS_THEREOF_CREDIT_NOTES_RETURNS_PARAM]								= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_REFUNDS_THEREOF_CREDIT_NOTES_RETURNS_PARAM],0))
	,[VL_REVENUE_PARAM]																= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_REVENUE_PARAM],0))
	,[VL_REVENUE_THEREOF_REVENUE_SD_PARAM]											= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_REVENUE_THEREOF_REVENUE_SD_PARAM],0))
	,[VL_REVENUE_THEREOF_WARRANTY_PROVISION_PARAM]									= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_REVENUE_THEREOF_WARRANTY_PROVISION_PARAM],0))
	,[VL_REVENUE_THEREOF_OTHER_REVENUE_ON_CHARGED_IS_COUNTS_SPECIAL_EFFECTS_PARAM]	= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_REVENUE_THEREOF_OTHER_REVENUE_ON_CHARGED_IS_COUNTS_SPECIAL_EFFECTS_PARAM],0))
	,[VL_NET_PRODUCT_COST_PARAM]													= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_NET_PRODUCT_COST_PARAM],0))
	,[VL_COGS_FX_HEDGING_IMPACT_PARAM]												= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_COGS_FX_HEDGING_IMPACT_PARAM],0))
	,[VL_COGS_STOCK_VALUE_ADJUSTMENT_PARAM]											= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_COGS_STOCK_VALUE_ADJUSTMENT_PARAM],0))
	,[VL_DEMMURAGE_AND_DETENTION_PARAM]												= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_DEMMURAGE_AND_DETENTION_PARAM],0))
	,[VL_DEADFREIGHT_PARAM]															= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_DEADFREIGHT_PARAM],0))
	,[VL_KICKBACKS_PARAM]															= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_KICKBACKS_PARAM],0))
	,[VL_3RDPARTYSERVICES_PARAM]													= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_3RDPARTYSERVICES_PARAM],0))
	,[VL_RMA_PARAM]																	= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_RMA_PARAM],0))
	,[VL_SAMPLES_PARAM]																= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_SAMPLES_PARAM],0))
	,[VL_DROPSHIPMENT_CEOTRA9ER_ARTIKEL_PARAM]										= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_DROPSHIPMENT_CEOTRA9ER_ARTIKEL_PARAM],0))
	,[VL_INBOUND_FREIGHT_COSTS_EST_PARAM]											= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_INBOUND_FREIGHT_COSTS_EST_PARAM],0))
	,[VL_PO_CANCELLATION_PARAM]														= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_PO_CANCELLATION_PARAM],0))
	,[VL_STOCK_ADJUSTMENT_PARAM]													= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_STOCK_ADJUSTMENT_PARAM],0))
	,[VL_OTHER_COGS_EFFECTS_PARAM]													= SUM(fact.AMT_AMOUNT_COMPANY * isnull(matrix.[VL_OTHER_COGS_EFFECTS_PARAM],0))
FROM L1.L1_FACT_A_GENERAL_LEDGER fact
LEFT JOIN [L1].[L1_DIM_A_SALES_TRANSACTION_TYPE] fkart
	ON fkart.ID_SALES_TRANSACTION_TYPE = fact.ID_SALES_TRANSACTION_TYPE
LEFT JOIN L1.L1_FACT_A_SALES_TRANSACTION sales on sales.[ID_SALES_TRANSACTION] =  fact.[ID_SALES_TRANSACTION]
LEFT JOIN [L1].[L1_FACT_A_STOCK_MOVEMENT] stock
	ON stock.CD_DOCUMENT_NO = fact.CD_REFERENCE_DOCUMENT_NO
		AND cast(stock.CD_DOCUMENT_LINE as int) = CAST(fact.CD_REFERENCE_DOCUMENT_LINE as int)
		AND cast(stock.NUM_POSTING_YEAR as nvarchar(10))= fact.CD_REFERENCE_ORG_UNIT
INNER JOIN [L1].[L1_DIM_A_FINANCE_TRAN_KPI_MATRIX] matrix
	ON matrix.CD_ACCOUNT_NUMBER = fact.CD_ACCOUNT_NUMBER
		AND (CONCAT(matrix.CD_TRANSACTION_TYPE_FI ,'#FKART')  =fkart.[CD_SALES_TRANSACTION_TYPE]  OR (matrix.CD_TRANSACTION_TYPE_FI IS NULL ))
		AND (ISNULL(matrix.CD_DOCUMENT_TYPE_FI,'') = ISNULL(fact.CD_DOCUMENT_TYPE_FI,'') OR matrix.CD_DOCUMENT_TYPE_FI IS NULL)
		AND (ISNULL(matrix.CD_STOCK_MOVEMENT_TYPE,'') = isnull(stock.CD_STOCK_MOVEMENT_TYPE,'') OR matrix.CD_STOCK_MOVEMENT_TYPE IS NULL)
		AND (
				(matrix.FL_HAS_TCODE = 'Y' AND isnull(CD_TRANSACTION_CODE,'')<> '') 
				OR  
				(matrix.FL_HAS_TCODE = 'N' AND isnull(CD_TRANSACTION_CODE,'')= '')
				
				OR matrix.FL_HAS_TCODE IS NULL
			)

WHERE 
	YEAR(D_FI_CREATED) = 2023-- and ID_SALES_TRANSACTION = 88098979
GROUP BY MONTH(D_FI_CREATED),fkart.[CD_SALES_TRANSACTION_TYPE],sales.CD_TYPE
--,fact.CD_ACCOUNT_NUMBER,isnull(stock.CD_STOCK_MOVEMENT_TYPE,'')
--,matrix.ID_FINANCE_TRAN_KPI_MATRIX,
--CONCAT(matrix.CD_TRANSACTION_TYPE_FI ,'#FKART'),
--matrix.CD_TRANSACTION_TYPE_FI,
--ISNULL(matrix.CD_DOCUMENT_TYPE_FI,''),
--ISNULL(fact.CD_DOCUMENT_TYPE_FI,'')


select * from [L1].[L1_DIM_A_FINANCE_TRAN_KPI_MATRIX]
select * from [L0].[L0_MI_ACDOCAKPIMATRIX]